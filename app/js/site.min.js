var self = this;
self.appconfig = {
    url: "https://stickers.gg"
}, self.submit = function(e) {
    var t = {};
    $.each($("#submit-form").serializeArray(), function(e, s) {
        t[s.name] = s.value
    }), t["g-recaptcha-response"] = grecaptcha.getResponse();
    var s = new Image;
    s.src = t.image, s.onerror = function() {
        $("#submit-message").html("The image link is invalid!").show()
    }, s.onload = function() {
        this.width > 199 && this.height > 199 && this.width < 513 && this.height < 513 ? $.ajax({
            url: self.appconfig.url + "/api/submit-" + e,
            method: "POST",
            data: t,
            success: function(e) {
                console.log(e), "success" == e.status && ($("#submit-form").trigger("reset"), $("#success-page").show(), $("#submit-page").hide(), grecaptcha.reset()), "error" == e.status && ($("#submit-message").html(e.message).show(), grecaptcha.reset())
            },
            error: function(e) {
                console.log(e)
            }
        }) : $("#submit-message").html("The image must be 200px-512px in size!").show()
    }
}, self.submit_pack = function(e) {
    var t = {},
        s = new FormData(e);
    s.append("stickers", JSON.parse(localStorage.getItem("selected")).join()), $.each($("#submit-form").serializeArray(), function(e, s) {
        t[s.name] = s.value
    }), t["g-recaptcha-response"] = grecaptcha.getResponse(), console.log(s), $.ajax({
        url: self.appconfig.url + "/api/submit-pack",
        method: "POST",
        data: s,
        contentType: !1,
        processData: !1,
        success: function(e) {
            console.log(e), "success" == e.status && ($("#submit-form").trigger("reset"), $("#success-page").show(), $("#submit-page").hide(), grecaptcha.reset()), "error" == e.status && ($("#submit-message").html(e.message).show(), grecaptcha.reset())
        },
        error: function(e) {
            console.log(e)
        }
    })
}, self.metaData = function(e, t) {
    var s = new Image;
    s.src = e, s.onload = function() {
        t(this.width, this.height)
    }
}, self.approve = function(e) {
    $.ajax({
        url: self.appconfig.url + "/api/approve-item",
        method: "POST",
        data: {
            id: e
        },
        success: function(e) {
            console.log(e), "success" == e.status && $("#edit-message").removeClass("alert-danger").addClass("alert-success").html(e.message).show(), "error" == e.status && $("#edit-message").html(e.message).show()
        },
        error: function(e) {
            console.log(e)
        }
    })
}, self.deny = function(e, t) {
    $.ajax({
        url: self.appconfig.url + "/api/deny-item",
        method: "POST",
        data: {
            id: e,
            reason: t
        },
        success: function(e) {
            console.log(e), "success" == e.status && $("#edit-message").removeClass("alert-danger").addClass("alert-success").html(e.message).show(), "error" == e.status && $("#edit-message").html(e.message).show()
        },
        error: function(e) {
            console.log(e)
        }
    })
}, self.deferImages = function() {
    var e = document.querySelectorAll("img.lazy");
    if (0 < e.length)
        for (var t = 0, s = e.length; t < s; t++) {
            var a = e[t].getAttribute("data-src");
            $(e[t]).parent().removeClass("pulse"), e[t].src = a
        }
}, self.addCollectionItem = function(e) {
    var t = JSON.parse(localStorage.getItem("selected"));
    void 0 !== t && null != t || (t = []), t.includes(e) || t.push(e), localStorage.setItem("selected", JSON.stringify(t))
}, self.removeCollectionItem = function(e) {
    var t = JSON.parse(localStorage.getItem("selected"));
    void 0 !== t && null != t || (t = []), t = t.filter(t => t !== e), localStorage.setItem("selected", JSON.stringify(t));
    var s = "";
    t.forEach(function(e) {
        s += '<div class="col-md-2 collection-item mb-2 pr-1 pl-1 remove-collection" data-id="' + e + '" ><div class="card emoji-card"><div class="emoji-item"><img src="https://stickers.gg/assets/stickers/' + e + '.png" width="32px"/></div></div></div>'
    }), $("#collectionItems").html(s)
}, self.clearCollectionItems = function() {
    localStorage.removeItem("selected")
}, self.downloadCollectionItems = function() {
    var e = new JSZip,
        t = 0,
        s = JSON.parse(localStorage.getItem("selected")),
        a = [];
    s.forEach(function(e) {
        a.push("https://stickers.gg/assets/stickers/" + e + ".png")
    }), a.forEach(function(s) {
        var o = s.split("/").pop();
        JSZipUtils.getBinaryContent(s, function(s, i) {
            if (s) throw s;
            e.file(o, i, {
                binary: !0
            }), ++t == a.length && e.generateAsync({
                type: "blob"
            }).then(function(e) {
                saveAs(e, "stickersgg-collection.zip")
            })
        })
    })
}, $("#image2").keyup(function(e) {
    $(this);
    self.metaData($(this).val(), function(e, t) {
        alert(e + "px " + t + "px")
    })
}), $("a.item-submit").click(function() {
    self.submit($(this).attr("data-type"))
}), $("a.item-submit-pack").click(function() {
    self.submit_pack($("#submit-form")[0])
}), $("a.approve").click(function() {
    self.approve($(this).attr("data-id")), $("#" + $(this).attr("data-id")).remove()
}), $("a.deny").click(function() {
    self.deny($(this).attr("data-id"), $("#reason").val()), $("#" + $(this).attr("data-id")).remove()
}), $("#g-item").on("hidden.bs.modal", function() {
    self.clearModal()
}), $(".g-load").click(function() {
    self.createPremiumModal($(this).attr("data-id")), $("#g-item").modal("show")
}), $(".collection-link").click(function() {
    var e = JSON.parse(localStorage.getItem("selected")),
        t = "";
    e.forEach(function(e) {
        t += '<div class="col-md-2 collection-item mb-2 pr-1 pl-1 remove-collection" data-id="' + e + '"><div class="card emoji-card"><div class="emoji-item"><img src="https://stickers.gg/assets/stickers/' + e + '.png" width="32px"/></div></div></div>'
    }), $("#collectionItems").html(t)
}), $(document).on("click", ".remove-collection", function() {
    self.removeCollectionItem($(this).attr("data-id"))
}), $(document).on("click", ".collection", function() {
    self.addCollectionItem($(this).attr("data-id")), $(this).hasClass("btn-default") ? $(this).html('<i class="fas fa-check"></i>').toggleClass("btn-success btn-default") : $(this).hasClass("btn-success") ? $(this).html('<i class="far fa-bookmark"></i>').toggleClass("btn-default btn-success") : $(this).hasClass("badge-ext") && $(this).html('<i class="fas fa-star"></i>')
}), $(document).ready(function() {
    $(".collection-modal").on("shown.bs.modal", function() {
        $("#download-collection").click(function() {
            self.downloadCollectionItems()
        }), $("a.clear-collection").click(function() {
            self.clearCollectionItems(), $("#collectionItems").html('<div class="mb-4 mt-4 text-muted text-center ml-auto mr-auto">You have no stickers in your collection yet!</div>')
        }), $("a.clear-settings").click(function() {
            self.clearOptions()
        })
    })
}), $('[data-toggle="popover"]').popover({
    placement: "bottom",
    trigger: "hover"
}), setTimeout(function() {
    self.deferImages()
}, 500);
